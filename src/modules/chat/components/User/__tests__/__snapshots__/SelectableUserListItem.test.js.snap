// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectableUserListItem should match snapshot 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 40px;
  height: 40px;
  border-radius: 20px;
  background-color: #eeeeee;
  font-weight: bold;
  font-family: sans-serif;
  font-size: 14px;
  color: white;
  cursor: pointer;
}

.c3 {
  color: white;
  font-family: sans-serif;
  font-weight: bold;
  font-size: 14px;
}

.c0 {
  height: 40px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  background-color: #333;
}

.c0:first-child {
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.c0:last-child {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.c2 {
  padding-left: 20px;
}

<SelectableUserListItem
  data={
    Object {
      "id": "1",
      "name": "Test",
    }
  }
  isSelected={true}
  onClick={[MockFunction]}
>
  <SelectableUserListItem__Container
    isSelected={true}
    onClick={[MockFunction]}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "SelectableUserListItem__Container-sc-74kahr-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "height:40px;flex:1 1 auto;padding:0 15px;display:flex;flex-flow:row nowrap;align-items:center;cursor:pointer;background-color:",
              [Function],
              ";&:first-child{border-top-left-radius:5px;border-top-right-radius:5px;}&:last-child{border-bottom-left-radius:5px;border-bottom-right-radius:5px;}",
            ],
          },
          "displayName": "SelectableUserListItem__Container",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "SelectableUserListItem__Container-sc-74kahr-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isSelected={true}
      onClick={[MockFunction]}
    >
      <div
        className="c0"
        onClick={[MockFunction]}
      >
        <UserColorCircle
          id="1"
          name="Test"
        >
          <UserColorCircle__ColorCircle
            color="#eeeeee"
            small={false}
            title="Test"
          >
            <StyledComponent
              color="#eeeeee"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "UserColorCircle__ColorCircle-sc-1fnyyl8-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "display:flex;flex-flow:row nowrap;justify-content:center;align-items:center;width:",
                      [Function],
                      ";height:",
                      [Function],
                      ";border-radius:",
                      [Function],
                      ";background-color:",
                      [Function],
                      ";font-weight:bold;font-family:sans-serif;font-size:",
                      [Function],
                      ";color:white;cursor:pointer;",
                    ],
                  },
                  "displayName": "UserColorCircle__ColorCircle",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "UserColorCircle__ColorCircle-sc-1fnyyl8-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              small={false}
              title="Test"
            >
              <div
                className="c1"
                color="#eeeeee"
                title="Test"
              >
                T
              </div>
            </StyledComponent>
          </UserColorCircle__ColorCircle>
        </UserColorCircle>
        <SelectableUserListItem__UserNameContainer>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SelectableUserListItem__UserNameContainer-sc-74kahr-1",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "padding-left:20px;",
                  ],
                },
                "displayName": "SelectableUserListItem__UserNameContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SelectableUserListItem__UserNameContainer-sc-74kahr-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            >
              <UserName
                name="Test"
              >
                <UserName__NameLabel>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "UserName__NameLabel-sc-1yge4xz-0",
                          "isStatic": true,
                          "lastClassName": "c3",
                          "rules": Array [
                            "color:white;font-family:sans-serif;font-weight:bold;font-size:14px;",
                          ],
                        },
                        "displayName": "UserName__NameLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "UserName__NameLabel-sc-1yge4xz-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c3"
                    >
                      Test
                    </div>
                  </StyledComponent>
                </UserName__NameLabel>
              </UserName>
            </div>
          </StyledComponent>
        </SelectableUserListItem__UserNameContainer>
      </div>
    </StyledComponent>
  </SelectableUserListItem__Container>
</SelectableUserListItem>
`;
